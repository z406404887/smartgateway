// Code generated by protoc-gen-go. DO NOT EDIT.
// source: test/test.proto

// 申明所属包

package test

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// 定义请求参数结构
type Request struct {
	Username             string   `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Request) Reset()         { *m = Request{} }
func (m *Request) String() string { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()    {}
func (*Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_84eb23d74a64bdab, []int{0}
}

func (m *Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Request.Unmarshal(m, b)
}
func (m *Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Request.Marshal(b, m, deterministic)
}
func (m *Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Request.Merge(m, src)
}
func (m *Request) XXX_Size() int {
	return xxx_messageInfo_Request.Size(m)
}
func (m *Request) XXX_DiscardUnknown() {
	xxx_messageInfo_Request.DiscardUnknown(m)
}

var xxx_messageInfo_Request proto.InternalMessageInfo

func (m *Request) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

// 定义响应参数结构
type Response struct {
	Returnmsg            string   `protobuf:"bytes,1,opt,name=returnmsg,proto3" json:"returnmsg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_84eb23d74a64bdab, []int{1}
}

func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (m *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(m, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetReturnmsg() string {
	if m != nil {
		return m.Returnmsg
	}
	return ""
}

func init() {
	proto.RegisterType((*Request)(nil), "test.Request")
	proto.RegisterType((*Response)(nil), "test.Response")
}

func init() { proto.RegisterFile("test/test.proto", fileDescriptor_84eb23d74a64bdab) }

var fileDescriptor_84eb23d74a64bdab = []byte{
	// 188 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2f, 0x49, 0x2d, 0x2e,
	0xd1, 0x07, 0x11, 0x7a, 0x05, 0x45, 0xf9, 0x25, 0xf9, 0x42, 0x2c, 0x20, 0xb6, 0x94, 0x4c, 0x7a,
	0x7e, 0x7e, 0x7a, 0x4e, 0xaa, 0x7e, 0x62, 0x41, 0xa6, 0x7e, 0x62, 0x5e, 0x5e, 0x7e, 0x49, 0x62,
	0x49, 0x66, 0x7e, 0x5e, 0x31, 0x44, 0x8d, 0x92, 0x2a, 0x17, 0x7b, 0x50, 0x6a, 0x61, 0x69, 0x6a,
	0x71, 0x89, 0x90, 0x14, 0x17, 0x47, 0x69, 0x71, 0x6a, 0x51, 0x5e, 0x62, 0x6e, 0xaa, 0x04, 0xa3,
	0x02, 0xa3, 0x06, 0x67, 0x10, 0x9c, 0xaf, 0xa4, 0xc1, 0xc5, 0x11, 0x94, 0x5a, 0x5c, 0x90, 0x9f,
	0x57, 0x9c, 0x2a, 0x24, 0xc3, 0xc5, 0x59, 0x94, 0x5a, 0x52, 0x5a, 0x94, 0x97, 0x5b, 0x9c, 0x0e,
	0x55, 0x88, 0x10, 0x30, 0x72, 0xe5, 0xe2, 0x71, 0x4a, 0x2c, 0xce, 0x4c, 0x0e, 0x4e, 0x2d, 0x2a,
	0xcb, 0x4c, 0x4e, 0x15, 0x32, 0xe5, 0x62, 0x0e, 0x4e, 0xac, 0x14, 0xe2, 0xd5, 0x03, 0x3b, 0x0c,
	0x6a, 0x97, 0x14, 0x1f, 0x8c, 0x0b, 0x31, 0x53, 0x89, 0xbf, 0xe9, 0xf2, 0x93, 0xc9, 0x4c, 0x9c,
	0x4a, 0x2c, 0xfa, 0xc5, 0x89, 0x95, 0x56, 0x8c, 0x5a, 0x49, 0x6c, 0x60, 0xe7, 0x19, 0x03, 0x02,
	0x00, 0x00, 0xff, 0xff, 0x18, 0x03, 0x8f, 0x41, 0xd5, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// BasicServiceClient is the client API for BasicService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type BasicServiceClient interface {
	Say(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
}

type basicServiceClient struct {
	cc *grpc.ClientConn
}

func NewBasicServiceClient(cc *grpc.ClientConn) BasicServiceClient {
	return &basicServiceClient{cc}
}

func (c *basicServiceClient) Say(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/test.BasicService/Say", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// BasicServiceServer is the server API for BasicService service.
type BasicServiceServer interface {
	Say(context.Context, *Request) (*Response, error)
}

func RegisterBasicServiceServer(s *grpc.Server, srv BasicServiceServer) {
	s.RegisterService(&_BasicService_serviceDesc, srv)
}

func _BasicService_Say_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BasicServiceServer).Say(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/test.BasicService/Say",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BasicServiceServer).Say(ctx, req.(*Request))
	}
	return interceptor(ctx, in, info, handler)
}

var _BasicService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "test.BasicService",
	HandlerType: (*BasicServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Say",
			Handler:    _BasicService_Say_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "test/test.proto",
}
